
##  You need to select 'Communication interface' to USB in 'make menuconfig'
##  when you compile Klipper
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------

[mcu pitb]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E66058919F846730-if00
restart_method: command
#canbus_uuid=615a3616e60b
[mcu pitb2]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E66058919F796730-if00
restart_method: command



[board_pins pitb]
mcu: pitb
aliases:
    ## Board enable LED
    LED_RUN=gpio15,

    ## Can pins. STANDBY can be pulled low if you're running USB to disable the transceiver
    ## https://www.nxp.com/docs/en/data-sheet/TJA1040.pdf page 4
    CAN_TX=gpio13, CAN_RX=gpio14, CAN_STANDBY=gpio25,

    ## SPI for motors. spi_bus: spi0a
    MISO=gpio0, MOSI=gpio3, SCLK=gpio2,

    ## Stepper pins
    MOT1_EN=gpio5, MOT1_CS=gpio6,  MOT1_DIR=gpio7,  MOT1_STEP=gpio8,
    MOT2_EN=gpio9, MOT2_CS=gpio10, MOT2_DIR=gpio11, MOT2_STEP=gpio12,

    ## Endstop pins, or DIAG with jumpers
    ENDSTOP_X=gpio23, ENDSTOP_Y=gpio24,

    ## I2C bus: i2c0e
    SCL=gpio17, SDA=gpio16,

    ## Other IO
    FAN0=gpio20, FAN1=gpio21, THERM0=gpio26,
    RGB=gpio29,

[board_pins pitb2]
mcu: pitb2
aliases:
    ## Board enable LED
    LED_RUN=gpio15,

    ## Can pins. STANDBY can be pulled low if you're running USB to disable the transceiver
    ## https://www.nxp.com/docs/en/data-sheet/TJA1040.pdf page 4
    CAN_TX=gpio13, CAN_RX=gpio14, CAN_STANDBY=gpio25,

    ## SPI for motors. spi_bus: spi0a
    MISO=gpio0, MOSI=gpio3, SCLK=gpio2,

    ## Stepper pins
    MOT1_EN=gpio5, MOT1_CS=gpio6,  MOT1_DIR=gpio7,  MOT1_STEP=gpio8,
    MOT2_EN=gpio9, MOT2_CS=gpio10, MOT2_DIR=gpio11, MOT2_STEP=gpio12,

    ## Endstop pins, or DIAG with jumpers
    ENDSTOP_X=gpio23, ENDSTOP_Y=gpio24,

    ## I2C bus: i2c0e
    SCL=gpio17, SDA=gpio16,

    ## Other IO
    FAN0=gpio20, FAN1=gpio21, THERM0=gpio26,
    RGB=gpio29,


### Fan headers are 
# [fan pitb2_fan_0]
# pin: pitb2:FAN0
# max_power: 1.0

# [fan pitb2_fan_1]
# pin: pitb2:FAN1
# max_power: 1.0

# ### MCU temperature, not usable for chamber temperature
# [temperature_sensor pitb2_mcu]
# sensor_type = temperature_mcu
# sensor_mcu = pitb2

### Connect a spare thermistor to T0 for accurate chamber readings
# [temperature_sensor pitbtemp]
# sensor_pin: pitb2:THERM0
# # pullup_resistor: 4700
# # # sensor_type: PT1000
# sensor_type: Generic 3950  
# min_temp: -250
# max_temp: 120
### Configuration for https://amzn.to/3Cj2fHV, a 16 pixel ring
# [neopixel pitb2]
# pin: pitb2:RGB
# chain_count: 16
# color_order: GRB
# initial_RED: 0.3
# initial_GREEN: 0.3
# initial_BLUE: 0.3

### SSD1306 display, similar to https://amzn.to/3VhMmYL
# [display]
# lcd_type: ssd1306
# i2c_mcu: pitb2
# i2c_bus: i2c0e
## i2c_speed: 400000  # Probably not needed