[server]
host: 0.0.0.0
port: 7125
klippy_uds_address: /home/pi/printer_data/comms/klippy.sock


[file_manager]
enable_object_processing: True


[octoprint_compat]


[history]


[update_manager]
channel: dev
refresh_interval: 168


[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail


[update_manager Klipper-Adaptive-Meshing-Purging]
type: git_repo
channel: dev
path: ~/Klipper-Adaptive-Meshing-Purging
origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services: klipper
primary_branch: main


[authorization]
cors_domains:
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    http://*.local
trusted_clients:
 127.0.0.1
 10.0.0.0/8
 127.0.0.0/8
 169.254.0.0/16
 172.16.0.0/12
 192.168.0.0/16
 FE80::/10
 ::1/128

 100.0.0.0/8
 100.98.163.68


[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen


# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
install_script: tools/pkglist.sh


# [webcam C310]
# location: printer
# #   A description of the webcam location, ie: what the webcam is observing.
# #   The default is "printer".
# icon: mdiWebcam
# #   A name of the icon to use for the camera.  See the tip following this
# #   example for known values.  The default is mdiWebcam.
# enabled: True
# #   An optional boolean value to indicate if this webcam should be enabled.
# #   Default is True.
# service: webrtc-camerastreamer
# #service: mjpegstreamer
# #   The name of the application or service hosting the webcam stream.  Front-
# #   ends may use this configuration to determine how to connect to the service
# #   and interpret its stream.  See the tip following this example for
# #   currently known values.  The default is "mjpegstreamer".
# #   A string describing the location of the camera.  Default is printer.
# target_fps: 30
# #   An integer value specifying the target framerate.  The default is 15 fps.
# target_fps_idle: 15
# #   An integer value specifying the target framerate when the printer is idle.
# #   The default is 5 fps.
# stream_url:/webcam2/webrtc
# #stream_url:/webcam/?action=stream
# #   The url for the camera stream request.  This may be a full url or a
# #   relative path (ie: /webcam?action=stream) if the stream is served on the
# #   same host as Moonraker at port 80.  This parameter must be provided.
# snapshot_url:/webcam2/?action=snapshot
# #   The url for the camera snapshot request.  This may be a full url or a
# #   relative path (ie: /webcam?action=stream) if the stream is served on the
# #   same host as Moonraker at port 80.  The default is an empty url.
# flip_horizontal: False
# #   A boolean value indicating whether the stream should be flipped
# #   horizontally.  The default is false.
# flip_vertical: False
# #   A boolean value indicating whether the stream should be flipped
# #   vertically.  The default is false.
# rotation: 0
# #   An integer value indicating the amount of clockwise rotation to apply
# #   to the stream.  May be 0, 90, 180, or 270.  The default is 0.
# aspect_ratio: 4:3
# #   The aspect ratio to display for the camera.  Note that this option
# #   is specific to certain services, otherwise it is ignored.
# #   The default is 4:3.

[timelapse]
#output_path: ~/printer_data/timelapse/
#frame_path: /tmp/timelapse/printer
#ffmpeg_binary_path: /usr/bin/ffmpeg
# moonraker.conf

[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker


# [update_manager cartographer]
# type: git_repo
# path: ~/cartographer-klipper
# channel: dev
# origin: https://github.com/Cartographer3D/cartographer-klipper.git
# env: ~/klippy-env/bin/python
# requirements: requirements.txt
# install_script: install.sh
# is_system_service: False
# managed_services: klipper
# info_tags:
#   desc=Cartographer Probe
[update_manager cartographer]
type: git_repo
path: ~/cartographer-klipper
channel: dev
origin: https://github.com/Cartographer3D/cartographer-klipper.git
is_system_service: False
managed_services: klipper
primary_branch: beta
info_tags: desc=Cartographer Probe

[update_manager sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: sonar
install_script: tools/install.sh

[update_manager klipper_auto_speed]
type: git_repo
path: ~/klipper_auto_speed
origin: https://github.com/anonoei/klipper_auto_speed.git
primary_branch: main
install_script: install.sh
managed_services: klipper
## Klippain Shake&Tune automatic update management
[update_manager Klippain-ShakeTune]
type: git_repo
origin: https://github.com/Frix-x/klippain-shaketune.git
path: ~/klippain_shaketune
virtualenv: ~/klippy-env
requirements: requirements.txt
system_dependencies: system-dependencies.json
primary_branch: main
managed_services: klipper
